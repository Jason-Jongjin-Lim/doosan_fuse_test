<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">

  <sslContextParameters id="sslContextParameters" xmlns="http://camel.apache.org/schema/spring">
    <trustManagers>
      <keyStore resource="{{JAVA_HOME}}/jre/lib/security/cacerts"/>
    </trustManagers>
  </sslContextParameters>

  <camelContext id="doosanPoCcamelContext" xmlns="http://camel.apache.org/schema/spring">

    <route id="httpProxyRoute">
      <from uri="servlet://?matchOnUriPrefix=true" id="proxyServlet"/>
      <choice>
        <when>
          <!-- Google API -->
          <simple>${header.CamelHttpPath} starts with 'google/'</simple>
          <to uri="direct:google" id="googleProducer"/>
        </when>
        <when>
          <!-- Azure  API -->
          <simple>${header.CamelHttpPath} starts with 'azure/'</simple>
          <to uri="direct:azure" id="azureProducer"/>
        </when>
        <when>
          <!-- Bing  API -->
          <simple>${header.CamelHttpPath} starts with 'bing/'</simple>
          <to uri="direct:bing" id="bingProducer"/>
        </when>
        <when>
          <!-- Watson Visual Recognition API -->
          <simple>${header.CamelHttpPath} starts with 'watson/'</simple>
          <to uri="direct:watson" id="watsonProducer"/>
        </when>
        <when>
          <!-- File upload API -->
          <simple>${header.CamelHttpPath} starts with 'upload'</simple>
          <to uri="direct:aws" id="awsProducer"/>
        </when>
      </choice>
    </route>

    <route id="googleProxyRoute">
      <from uri="direct:google" id="googleProxy"/>
      <setHeader headerName="CamelHttpPath">
        <groovy>request.headers['CamelHttpPath'] - 'google/'</groovy>
      </setHeader>
      <setHeader headerName="PublicCloudUrl" id="googleSetHeaderPublicCloudUrl">
        <groovy>
          switch(request.headers['CamelHttpPath']) {
          case ~/^v1\/vision.*$/ : 'https4:vision.googleapis.com' ; break
          case ~/^v1\/text.*$/ : 'https4:texttospeech.googleapis.com'; break
          }
        </groovy>
      </setHeader>
      <setHeader headerName="CamelHttpQuery" id="setHeaderCamelHttpQuery">
        <simple>key={{google.api.key}}</simple>
      </setHeader>


      <to uri="direct:httpClient" id="googleHttpClient"/>
    </route>

    <route id="azureProxyRoute">
      <from uri="direct:azure" id="azureProxy"/>
      <setHeader headerName="CamelHttpPath">
        <groovy>request.headers['CamelHttpPath'] - 'azure/'</groovy>
      </setHeader>
      <setHeader headerName="PublicCloudUrl" id="azureSetHeaderPublicCloudUrl">
        <groovy>
          switch(request.headers['CamelHttpPath']) {
          case ~/^vision\/.*$/ : 'https4:{{azure.api.host}}'; break
          case ~/^face\/.*$/   : 'https4:{{azure.api.host}}' ; break
          case ~/^sts\/.*$/    : 'https4:api.cognitive.microsoft.com' ; break
          }
        </groovy>
      </setHeader>
      <setHeader headerName="Ocp-Apim-Subscription-Key" id="azureSetHeaderPublicCloudUrl">
        <groovy>
          switch(request.headers['CamelHttpPath']) {
          case ~/^vision\/.*$/ : '{{azure.vision.api.key}}'; break
          case ~/^face\/.*$/   : '{{azure.face.api.key}}' ; break
          case ~/^sts\/.*$/    : '{{azure.sts.api.key}}' ; break
          }
        </groovy>
      </setHeader>

      <to uri="direct:httpClient" id="azureHttpClient"/>
    </route>

    <route id="bingProxyRoute">
      <from uri="direct:bing" id="bingProxy"/>
      <setHeader headerName="CamelHttpPath">
        <groovy>request.headers['CamelHttpPath'] - 'bing/'</groovy>
      </setHeader>
      <setHeader headerName="PublicCloudUrl" id="bingSetHeaderPublicCloudUrl">
        <groovy>
          'https4:speech.platform.bing.com'
        </groovy>
      </setHeader>
      <to uri="direct:httpClient" id="bingHttpClient"/>
    </route>

    <route id="watsonProxyRoute">
      <from uri="direct:watson" id="watsonProxy"/>
      <setHeader headerName="PublicCloudUrl" id="watsonSetHeaderPublicCloudUrl">
        <simple>http4:{{watson.api.host}}:443</simple>
      </setHeader>
      <setHeader headerName="Authorization" id="watsonSetHeaderAuthorization">
        <groovy>'Basic ' + 'apikey:{{watson.api.key}}'.bytes.encodeBase64()</groovy>
      </setHeader>
      <setHeader headerName="CamelHttpPath">
        <groovy>request.headers['CamelHttpPath'] - 'watson/'</groovy>
      </setHeader>
      <to uri="direct:httpClient" id="watsonHttpClient"/>
    </route>

    <route id="publicCloudtRoute">
      <from uri="direct:httpClient" id="publicCloudtHttpConsumer"/>
      <process ref="inspector"/>
      <toD uri="${header.PublicCloudUrl}?
           useRelativePath=true&amp;
           sync=true&amp;
           ssl=true&amp;
           sslContextParameters=#sslContextParameters&amp;
           bridgeEndpoint=true&amp;
           throwExceptionOnFailure=false&amp;
           disconnect=true&amp;
           useGlobalSslContext Parameters"
           id="publicCloudHttpProducer"/>
    </route>

    <route id="awsS3ProducerRoute">
      <from uri="direct:aws"/>
      <to uri="direct:multipart"/>
      <setHeader headerName="CamelAwsS3Key">
        <groovy>request.headers.FileName ?: "unknown"</groovy>
      </setHeader>
      <to uri="aws-s3:{{camel.component.aws-s3.configuration.bucket-name}}" id="awsS3Producer"/>
      <setHeader headerName="Content-Type">
        <constant>application/json</constant>
      </setHeader>
      <setBody>
        <groovy>
          def urlEncoded = java.net.URLEncoder.encode(request.headers.CamelAwsS3Key, "UTF-8")
          """{"imageUrl": "https://{{aws.s3.object.host}}/${urlEncoded}"}"""
        </groovy>
      </setBody>
    </route>

  </camelContext>
</beans>
